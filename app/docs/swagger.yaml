# Copy this file to https://editor.swagger.io/ and view

openapi: 3.0.0
info:
  title: Mentorship Platform API
  version: 1.0.0
  description: API documentation for the mentorship platform

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.mentorship.com
    description: Production server (example)

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AvailabilityResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time

    BlockAvailabilityRequest:
      type: object
      required:
        - start_date
        - end_date
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      example:
        start_date: "2025-03-12"
        end_date: "2025-03-13"

    DeleteBlockRequest:
      type: object
      required:
        - block_id
      properties:
        block_id:
          type: string
          format: uuid
      example:
        block_id: "da912d0a-fb2e-4b86-ad4c-546633b066e4"

    CreateAppointmentRequest:
      type: object
      required:
        - mentor_id
        - mentee_id
        - start_time
        - end_time
        - service_type
        - price
      properties:
        mentor_id:
          type: string
          format: uuid
        mentee_id:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        service_type:
          type: string
        price:
          type: number
          format: float
      example:
        mentor_id: "93137255-d7ac-4219-90d9-a886ae987732"
        mentee_id: "6972686b-6156-4d21-950a-821093ffd068"
        start_time: "2025-03-17T14:00:00Z"
        end_time: "2025-03-17T15:00:00Z"
        service_type: "consultation"
        price: 100.00

paths:
  # User APIs
  /api/user/insert:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
              example:
                username: "testuser2"
                email: "test2@example.com"
                password: "Test123!@#"
      responses:
        200:
          description: User created successfully
        400:
          description: Bad request

  /api/user/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: User details
        404:
          description: User not found

  # Mentor APIs
  /api/mentor/list:
    get:
      summary: List all mentors
      responses:
        200:
          description: List of all mentors

  /api/mentor/upsert/{id}:
    post:
      summary: Create or update mentor profile
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - company
                - years_of_experience
                - years_of_experience_recorded_date
                - introduction
                - industries
                - services
              properties:
                title:
                  type: string
                  description: Mentor's job title
                company:
                  type: string
                  description: Mentor's current company
                years_of_experience:
                  type: integer
                  description: Number of years of experience
                years_of_experience_recorded_date:
                  type: string
                  format: date-time
                  description: Date when years of experience was recorded
                introduction:
                  type: string
                  description: Mentor's self introduction
                industries:
                  type: array
                  items:
                    type: string
                  description: List of industries the mentor specializes in
                services:
                  type: object
                  additionalProperties:
                    type: number
                  description: Map of service names to their prices
              example:
                title: "Senior Software Engineer"
                company: "Tech Corp"
                years_of_experience: 8
                years_of_experience_recorded_date: "2025-04-07T00:00:00Z"
                introduction: "Experienced software engineer specializing in web development"
                industries: ["Technology", "E-commerce", "Finance"]
                services: {
                  "consultation": 100,
                  "resume_review": 50,
                  "mock_interview": 150,
                  "career_guidance": 80
                }
      responses:
        200:
          description: Mentor profile updated successfully

  # Availability APIs
  /api/availability_block/{id}:
    get:
      summary: Get all blocks for a mentor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Mentor's UUID
      responses:
        200:
          description: List of mentor's blocks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        mentor_id:
                          type: string
                          format: uuid
                        blocked_range:
                          type: string
                          description: PostgreSQL tstzrange
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/availability_block/{id}/insert:
    post:
      summary: Create a new block for mentor's availability
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Mentor's UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockAvailabilityRequest'
      responses:
        200:
          description: Block created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: "Availability blocked successfully"

  /api/availability_block/{id}/delete:
    post:
      summary: Delete a specific block
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Mentor's UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBlockRequest'
      responses:
        200:
          description: Block deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: "Block deleted successfully"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required field: block_id"

  /api/availability/{id}/view:
    get:
      summary: Get mentor's availability for a date range
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Mentor's UUID
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          example: "2025-03-16"
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
          example: "2025-03-18"
      responses:
        200:
          description: List of available time slots
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'

  /api/availability/{id}/viewdaily:
    get:
      summary: Get mentor's availability for a specific day
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Mentor's UUID
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
          example: "2025-03-17"
      responses:
        200:
          description: List of available time slots for the day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'

  /api/availability/update:
    post:
      summary: Update mentor's regular weekly availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - availabilities
              properties:
                user_id:
                  type: string
                  format: uuid
                availabilities:
                  type: array
                  items:
                    type: object
                    required:
                      - day_of_week
                      - start_time
                      - end_time
                    properties:
                      day_of_week:
                        type: integer
                        minimum: 0
                        maximum: 6
                        description: 0-6 representing Sunday to Saturday
                      start_time:
                        type: string
                        pattern: "^([01]\\d|2[0-3]):[0-5]\\d$"
                        description: "24-hour format HH:mm"
                      end_time:
                        type: string
                        pattern: "^([01]\\d|2[0-3]):[0-5]\\d$"
                        description: "24-hour format HH:mm"
              example:
                user_id: "93137255-d7ac-4219-90d9-a886ae987732"
                availabilities:
                  - day_of_week: 1
                    start_time: "09:00"
                    end_time: "17:00"
                  - day_of_week: 2
                    start_time: "09:00"
                    end_time: "17:00"
                  - day_of_week: 3
                    start_time: "09:00"
                    end_time: "17:00"
      responses:
        200:
          description: Weekly availability updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: "Availability updated successfully"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid availability slots provided"

  # Appointment APIs
  /api/appointment/insert:
    post:
      summary: Create a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentRequest'
      responses:
        200:
          description: Appointment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'

  # Checkout APIs
  /api/checkout:
    post:
      summary: Create a Stripe checkout session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
              properties:
                amount:
                  type: integer
                  description: Amount in cents
                currency:
                  type: string
                  enum: [usd]
              example:
                amount: 5000
                currency: "usd"
      responses:
        200:
          description: Checkout session created 

  /api/email:
    post:
      summary: Send an email using a template
      description: |
        Sends an email using a specified template with provided data.
        Currently supports MenteeApptConfirmationEmail template.
      tags:
        - Email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - to
                - subject
                - type
                - message
              properties:
                from:
                  type: string
                  format: email
                  description: Sender email address
                  example: "contactus@mentorup.info"
                to:
                  type: string
                  format: email
                  description: Recipient email address
                  example: "user@example.com"
                subject:
                  type: string
                  description: Email subject line
                  example: "Appointment Confirmation - Mentorship Session"
                type:
                  type: string
                  enum: ["MenteeApptConfirmationEmail"]
                  description: Email template type
                  example: "MenteeApptConfirmationEmail"
                message:
                  type: object
                  description: Template-specific data
                  required:
                    - userName
                    - serviceName
                    - price
                    - mentorName
                    - appointmentDate
                    - appointmentTime
                  properties:
                    userName:
                      type: string
                      example: "John Doe"
                    serviceName:
                      type: string
                      example: "Career Consultation"
                    price:
                      type: number
                      example: 150
                    mentorName:
                      type: string
                      example: "Jane Smith"
                    appointmentDate:
                      type: string
                      format: date
                      example: "2024-03-20"
                    appointmentTime:
                      type: string
                      format: time
                      example: "14:00"
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "ok"
                  data:
                    type: object
                    nullable: true
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1
                  message:
                    type: string
                    example: "Missing required fields: from, to, subject, type, message"
                  data:
                    type: object
                    nullable: true 